var viewModel = function (e) {
    var a = this; a.Permission = ko.mapping.fromJS(e.Permission); a.resx = ko.mapping.fromJS(e.resx); a.urls = ko.mapping.fromJS(e.urls); a.searchForm = ko.mapping.fromJS(e.searchForm); a.addForm = ko.mapping.fromJS(e.addForm); a.extForm = ko.mapping.fromJS(e.extForm); for (var d in e.extForm) { var b = ko.observableArray(e.extForm[d]); switch (d) { case "extA": a.extA = b; break; case "extB": a.extB = b; break; case "extC": a.extC = b; break; case "extD": a.extD = b; break; case "extE": a.extE = b; break; case "extF": a.extF = b; break; case "extG": a.extG = b; break; case "extH": a.extH = b; break; case "extI": a.extI = b; break; default: } } delete a.Permission.__ko_mapping__; delete a.resx.__ko_mapping__; delete a.urls.__ko_mapping__; delete a.extForm.__ko_mapping__; delete a.searchForm.__ko_mapping__; delete a.addForm.__ko_mapping__; a.isLogin = function (g) { $.ajax({ url: "/api/Base/IsLogin", data: {}, type: "Post", success: function (h, i) { $.procAjaxMsg(h, function () { g() }, function () { $.alertMsg(h.Msg, "操作提示", null) }) } }).fail(function (i, j, h) { $.alertMsg("提交失败，原因如下: " + h, "操作提示", null) }) }; a.loadHandle = function () { if (e.Permission.a_list) { if (typeof loadExt == "function") { a.isLogin(function () { loadExt(a, "afterLoad") }) } for (var g in e.Permission) { if (g != "a_list") { $("#" + g).css("display", ""); if (e.Permission[g]) { $("#" + g).linkbutton("enable") } else { $("#" + g).linkbutton("disable"); $("#" + g).attr("data-bind", "") } } } $("#s-toolbar").html($("#searchTemplate").html()); $("#z-toolbar").html($("#buttonTemplate").html()); $("#v-toolbar").html($("#saveTemplate").html()) } else { $(".easyui-layout").html(""); $.alertMsg(e.resx.listTitle, "操作提示", null) } }; a.addHandle = function () { if (e.Permission.a_add) { delete a.addForm.__ko_mapping__; $.each(a.addForm, function () { this("") }); if (typeof loadExt == "function") { loadExt(a, "beforeAdd") } $("#" + e.urls.dataAddName).window("open") } else { $.alertMsg(e.resx.addTitle, "操作提示", null) } }; a.saveHandle = function () { $("#" + e.urls.dataFormName).form("submit", { onSubmit: function () { if ($(this).form("validate")) { $("#saveBut").linkbutton("disable"); $("#saveBut").linkbutton({ iconCls: "icon-ok", text: "保存中" }); if (typeof loadExt == "function") { loadExt(a, "beforeSave") } $.ajax({ url: e.urls.save, data: a.addForm, type: "POST", success: a.saveSuccfunc }).fail(function (h, i, g) { $("#saveBut").linkbutton("enable"); $("#saveBut").linkbutton({ iconCls: "icon-ok", text: "保 存" }); $.alertMsg("提交失败，原因如下: " + g, "操作提示", null) }); return false } else { return false } } }) }; a.saveSuccfunc = function f(g, h) { $("#saveBut").linkbutton("enable"); $("#saveBut").linkbutton({ iconCls: "icon-ok", text: "保 存" }); $.procAjaxMsg(g, function () { $("#" + e.urls.dataGgridName)[e.urls.dataGgridType]("reload"); $("#" + e.urls.dataAddName).window("close"); delete a.addForm.__ko_mapping__; $.each(a.addForm, function () { this("") }); if (typeof loadExt == "function") { loadExt(a, "afterSave") } $.alertMsg(g.Msg, "操作提示", null) }, function () { $.alertMsg(g.Msg, "操作提示", null) }) }; a.updateHandle = function () { if (e.Permission.a_edit) { var g = $("#" + e.urls.dataGgridName)[e.urls.dataGgridType]("getSelected"); if (g) { if (typeof loadExt == "function") { loadExt(a, "beforeEdit") } $.ajax({ url: e.urls.edit, data: g, type: "post", success: a.editSuccupfunc }).fail(function (i, j, h) { $.alertMsg("提交失败，原因如下: " + h, "操作提示", null) }) } else { $.alertMsg("请先选择要编辑的行！", "操作提示", null) } } else { $.alertMsg(e.resx.editTitle, "操作提示", null) } }; a.editSuccupfunc = function c(g, h) { if (g.Statu != "1") { $.procAjaxMsg(g, function () { $.alertMsg(g.Msg, "操作提示", null) }, function () { $.alertMsg(g.Msg, "操作提示", null) }) } else { delete a.addForm.__ko_mapping__; ko.mapping.fromJS(g.Data, {}, a.addForm); delete a.addForm.__ko_mapping__; if (typeof loadExt == "function") { loadExt(a, "afterEdit") } $("#" + e.urls.dataAddName).window("open") } }; a.deleteHandle = function () { if (e.Permission.a_del) { var g = $("#" + e.urls.dataGgridName)[e.urls.dataGgridType]("getSelected"); if (g) { if (typeof loadExt == "function") { loadExt(a, "beforeDel") } $.messager.confirm("请确认", "您确定要删除选择的行吗！", function (h) { if (h) { $.ajax({ url: e.urls.del, data: g, type: "post", success: a.delSuccupfunc }).fail(function (j, k, i) { $.alertMsg("删除失败，原因如下: " + i, "操作提示", null) }) } }) } else { $.alertMsg("请先选择要删除的行！", "操作提示", null) } } else { $.alertMsg(e.resx.deleteTitle, "操作提示", null) } }; a.delSuccupfunc = function c(g, h) { $.procAjaxMsg(g, function () { $("#" + e.urls.dataGgridName)[e.urls.dataGgridType]("reload"); $("#" + e.urls.dataGgridName)[e.urls.dataGgridType]("unselectAll"); if (typeof loadExt == "function") { loadExt(a, "afterDel") } $.alertMsg(g.Msg, "操作提示", null) }, function () { $.alertMsg(g.Msg, "操作提示", null) }) }; a.searchHandle = function () { if (e.Permission.a_list) { a.isLogin(function () { var g = ko.toJS(a.searchForm); if (typeof loadExt == "function") { loadExt(a, "beforeSearch") } $("#" + e.urls.dataGgridName)[e.urls.dataGgridType]({ queryParams: g }); $("#" + e.urls.dataGgridName)[e.urls.dataGgridType]("unselectAll") }) } else { $(".easyui-layout").html(""); $.alertMsg(e.resx.listTitle, "操作提示", null) } }; a.clearHandle = function () {
        if (e.Permission.a_list) {
            a.isLogin(function () {
                $.each(a.searchForm, function () { this("") }); if (typeof loadExt == "function") { loadExt(a, "beforeClear") } $("#" + e.urls.dataGgridName)[e.urls.dataGgridType]({ queryParams: "" }); $("#" + e.urls.dataGgridName)[e.urls.dataGgridType]("unselectAll")
            })
        } else { $(".easyui-layout").html(""); $.alertMsg(e.resx.listTitle, "操作提示", null) }
    }; a.refreshHandle = function () { a.isLogin(function () { $("#" + e.urls.dataGgridName)[e.urls.dataGgridType]("reload"); $("#" + e.urls.dataGgridName)[e.urls.dataGgridType]("unselectAll") }) }; a.closeHandle = function () { $("#" + e.urls.dataAddName).window("close") }; a.outExcelHandle = function () { if (e.Permission.a_excelout) { a.isLogin(function () { var g = ko.toJS(a.searchForm); if (typeof loadExt == "function") { loadExt(a, "beforeOutExcel") } $.messager.confirm("请确认", "您确定要导出数据吗？", function (h) { if (h) { $.ajax({ url: e.urls.writexls, data: g, cache: false, type: "POST", success: a.outExcelfunc }).fail(function (j, k, i) { $.alertMsg("导出失败，原因如下: " + i, "操作提示", null) }) } }) }) } else { $.alertMsg("您没有导出权限！", "操作提示", null) } }; a.outExcelfunc = function c(g, h) { $.procAjaxMsg(g, function () { if (typeof loadExt == "function") { loadExt(a, "afterOutExcel") } window.location.href = g.BackUrl }, function () { $.alertMsg(g.Msg, "导出失败", null) }) }; a.inExcelHandle = function () { if (e.Permission.a_excelin) { a.isLogin(function () { if (typeof loadExt == "function") { loadExt(a, "beforeInExcel") } if (navigator.userAgent.indexOf("MSIE") > 0) { $("#excelurl").filebox("destroy") } else { $("#excelurlie").css("display", "none") } $("#excelurl").filebox("clear"); var g = $.parseJSON('{"total":0,"rows":[]}'); a.errorLoad(g); $("#InExcel").window("open").window("setTitle", "导入EXCEL") }) } else { $.alertMsg("您没有导入权限！", "操作提示", null) } }; a.selectExcelHandle = function () { $("#excelBut").linkbutton("disable"); $("#excelBut").linkbutton({ iconCls: "icon-page_excel", text: "导入中.." }); $("#InExcelForm").form("submit", { url: e.urls.readxls.replace("/api", ""), cache: false, onSubmit: function () { if ($(this).form("validate")) { var g = $.parseJSON('{"total":0,"rows":[]}'); a.errorLoad(g); return true } else { $("#excelBut").linkbutton("enable"); $("#excelBut").linkbutton({ iconCls: "icon-page_excel", text: "导 入" }); return false } }, success: function (g) { $("#excelBut").linkbutton("enable"); $("#excelBut").linkbutton({ iconCls: "icon-page_excel", text: "导 入" }); var g = $.parseJSON(g); $.procAjaxMsg(g, function () { if (navigator.userAgent.indexOf("MSIE") > 0) { var h = $("#excelurlie"); h.after(h.clone().val("")); h.remove() } else { $("#excelurl").filebox("clear") } $("#InExcel").window("close"); $("#data_grid").datagrid("reload"); $.alertMsg(g.Msg, "操作提示", null) }, function () { if (g.Data == null) { $.alertMsg(g.Msg, "操作提示", null) } else { a.errorLoad(g.Data) } }) } }) }; a.errorLoad = function (g) { $("#error_grid").datagrid({ data: g, fit: true, fitColumns: true, nowrap: false, rownumbers: true, singleSelect: true, border: 0, idField: "rowIndex", columns: [[{ title: "错误行", field: "rowIndex", width: 40, align: "center", halign: "center" }, { title: "错误列", field: "columnIndex", width: 40, align: "center", formatter: function (h) { if (h) { return h == "0" ? "" : h } } }, { title: "错误原因", field: "errorCause", width: 300, align: "left" }]] }) }; a.loadHandle()
};