 <#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ output extension=".cs"#>
<# 
CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);
string inputFile = @"../Model/Model.edmx";   
EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();     
EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);
#>                          
using System;  
using System.Collections.Generic;
using System.Linq;       
using System.Text;         
using IBLL; 
namespace BLL
{  
	public partial class BLLSession:IBLLSession   
    {  
<#
int version=0;
// Emit Entity Types    

 
foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{
    //fileManager.StartNewFile(entity.Name + "RepositoryExt.cs");
    //BeginNamespace(namespaceName, code); 
    version++;
#>    
		#region <#=version.ToString("00") #> 业务接口 I<#=entity.Name#>Service
		I<#=entity.Name#>Service i<#=entity.Name#>Service;
		public I<#=entity.Name#>Service I<#=entity.Name#>Service
		{
			get
			{
				if(i<#=entity.Name#>Service==null)
					i<#=entity.Name#>Service= new <#=entity.Name#>Service();
				return i<#=entity.Name#>Service;
			}
			set
			{
				i<#=entity.Name#>Service= value;
			}
		}
		#endregion

<#}#>
    }

}